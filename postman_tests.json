{
	"info": {
		"_postman_id": "8b1757d5-f385-47b7-97e3-f222f9d4cd17",
		"name": "gr_29",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "the_first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let person = {\r",
							"    \"age\": \"30\",\r",
							"    \"family\": {\r",
							"        \"children\": [\r",
							"            [\r",
							"                \"Alex\",\r",
							"                24\r",
							"            ],\r",
							"            [\r",
							"                \"Kate\",\r",
							"                12\r",
							"            ]\r",
							"        ],\r",
							"        \"u_salary_1_5_year\": 2800\r",
							"    },\r",
							"    \"name\": \"Alex\",\r",
							"    \"salary\": 700\r",
							"}\r",
							"\r",
							"let item_1 = 2\r",
							"pm.test('Item_1 Test', function(){\r",
							"    pm.expect(item_1).to.eql(2)\r",
							"})\r",
							"\r",
							"\r",
							"pm.test('Item_2 Person', function(){\r",
							"    pm.expect(+person.age).to.deep.equal(30)\r",
							"})\r",
							"\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Item_3 jsonData', function(){\r",
							"    pm.expect(jsonData.family.children[0][1]).to.deep.equal(24)\r",
							"})\r",
							"\r",
							"pm.test('Item 4 Person', function(){\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"})\r",
							"\r",
							"pm.test('Item_5 Person', function(){\r",
							"    pm.expect(person).to.deep.include({\"salary\": 700})\r",
							"})\r",
							"\r",
							"pm.test(\"Item_6 Person\", function(){\r",
							"    pm.expect(person.family.children[1]).to.deep.include(12)\r",
							"})\r",
							"\r",
							"pm.test('Item_7 Person', ()=>{\r",
							"    pm.expect(person.family.children).to.be.a('array')\r",
							"})\r",
							"\r",
							"pm.test('Item_7.1 Person', ()=>{\r",
							"    pm.expect(person.age).to.be.a('String')\r",
							"})\r",
							"\r",
							"pm.test('Item_8 Person', ()=>{\r",
							"    pm.expect(person.family.children[1]).to.be.include.an('Array').that.include(12)\r",
							"})\r",
							"\r",
							"pm.test('Item_9 Person', ()=>{\r",
							"    pm.expect(person.family.children[1]).to.deep.equal([\"Kate\", 12])\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "700",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		}
	]
}